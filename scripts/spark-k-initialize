#!/bin/sh

#
# Spark on K intialize script
#


#
# K Job system forcibly exports POSIXY_CORRECT, so unset it.
#
unset POSIXLY_CORRECT

. /work/system/Env_base 1> /dev/null 2>&1

mpiexec /work/system/bin/msh hostname > k_nodes 2> /dev/null
export NODES_NUBMER=`wc -l k_nodes 2> /dev/null`

if [ "${NODES_NUBMER}" -gt 1 -a ! -z "${USE_DRIVER_NODE}" ]; then
    K_MASTER_NODE="`tail -n 1 k_nodes`"
    K_DRIVER_NODE="`hotaname`"
else
    K_MASTER_NODE="`hostname`"
    K_DRIVER_NODE=""
fi

COMMON_DIR=`(cd ..; pwd)`
SPARK_ARCHIVE=spark-1.6.0-bin-custom-spark

mkdir ${COMMON_DIR}/conf
cat << EOS > ${COMMON_DIR}/conf/spark-env.sh
. /work/system/Env_base 1> /dev/null 2>&1
EOS

if [ -d /opt/spark ]; then
  SPARK_HOME=/opt/spark
else if [ -d /opt/local/spark ]; then
  SPARK_HOME=/opt/local/spark
else if [ -d /opt/aics/spark ]; then
  SPARK_HOME=/opt/aics/spark
else if [ -f ./spark-1.6.0-bin-custom-spark.tgz ]; then
  # Expects Spark tarball exists
  tar zxf ${SPARK_ARCHIVE}.tgz
  mv ${SPARK_ARCHIVE} ../
  SPARK_HOME=`pwd`/../${SPARK_ARCHIVE}
  SPARK_HOME=`(cd ${SPARK_HOME}; pwd)`
else
  # Expects spark-submit is in PATH
  spark_sumit=`which spark-submit 2> /dev/null`
  if [ $? -eq 0 ]; then
    dir=`dirname $spark_sumit`
    SPARK_HOME=`cd $dir; ..`
  fi
fi; fi; fi; fi

if [ -z "$SPARK_HOME" ]; then
  echo "Spark doesn't exists"
  exit 1
fi

export SPARK_HOME
export JAVA_HOME=/opt/klocal/openjdk7u45
export PATH=${JAVA_HOME}/bin:$PATH
export CLASSPATH=.:${JAVA_HOME}/jre/lib:${JAVA_HOME}/lib:${JAVA_HOME}/lib/tools.jar

export RHOME=/opt/aics/R

export PYTHON_HOME=/opt/local/Python-2.7.3/bin

export PATH=${PYTHON_HOME}/bin:${PATH}
export LD_LIBRARY_PATH=${PYTHON_HOME}/lib:${LD_LIBRARY_PATH}

export COMMON_DIR
export SPARK_MASTER_NODE=spark://${K_MASTER_NODE}:7077

cat << EOF >../start-slave.sh
#!/usr/bin/env bash

unset POSIXLY_CORRECT

if [ \`hostname\` == ${K_DRIVER_NODE} ]
    if [ ${NODES_NUBMER} -gt 1 ]; then
        exit 0
    fi
else if [ \`hostname\` == ${K_MASTER_NODE} ]; then
    if [ ! -z "${K_DRIVER_NODE} -a ${NODES_NUBMER} -gt 2 ]; then
        exit 0
    else if [ -z "${K_DRIVER_NODE} -a ${NODES_NUBMER} -gt 1 ]; then
        exit 0
    fi; fi
fi; fi

rankdir=\`pwd\`

. /work/system/Env_base 1> /dev/null 2>&1

export SPARK_HOME=${SPARK_HOME}
export JAVA_HOME=${JAVA_HOME}
export PATH=${JAVA_HOME}/bin:$PATH
export CLASSPATH=.:${JAVA_HOME}/jre/lib:${JAVA_HOME}/lib:${JAVA_HOME}/lib/tools.jar

export RHOME=${RHOME}
export PATH=\${RHOME}/bin:$PATH

export PYTHON_HOME=${PYTHON_HOME}
export PATH=\${PYTHON_HOME}/bin:${PATH}
export LD_LIBRARY_PATH=\${PYTHON_HOME}/lib:\${LD_LIBRARY_PATH}

# use the rank directory as a local directory
SPARK_CONF_DIR=${COMMON_DIR}/conf \
SPARK_LOCAL_DIRS=\${rankdir}/localdir \
SPARK_LOG_DIR=\${rankdir}/logs \
SPARK_WORKER_DIR=\${rankdir}/work \
SPARK_PID_DIR=\${rankdir}/pids \
${SPARK_HOME}/sbin/start-slave.sh ${SPARK_MASTER_NODE}
EOF

cat << EOF >../stop-slave.sh
#!/usr/bin/env bash

unset POSIXLY_CORRECT

if [ \`hostname\` == ${K_DRIVER_NODE} ]
    if [ ${NODES_NUBMER} -gt 1 ]; then
        exit 0
    fi
else if [ \`hostname\` == ${K_MASTER_NODE} ]; then
    if [ ! -z "${K_DRIVER_NODE} -a ${NODES_NUBMER} -gt 2 ]; then
        exit 0
    else if [ -z "${K_DRIVER_NODE} -a ${NODES_NUBMER} -gt 1 ]; then
        exit 0
    fi; fi
fi; fi

rankdir=\`pwd\`

. /work/system/Env_base 1> /dev/null 2>&1

export SPARK_HOME=${SPARK_HOME}
export JAVA_HOME=${JAVA_HOME}
export PATH=${JAVA_HOME}/bin:$PATH
export CLASSPATH=.:${JAVA_HOME}/jre/lib:${JAVA_HOME}/lib:${JAVA_HOME}/lib/tools.jar

export RHOME=${RHOME}
export PATH=\${RHOME}/bin:$PATH

export PYTHON_HOME=${PYTHON_HOME}
export PATH=\${PYTHON_HOME}/bin:${PATH}
export LD_LIBRARY_PATH=\${PYTHON_HOME}/lib:\${LD_LIBRARY_PATH}

SPARK_CONF_DIR=${COMMON_DIR}/conf \
SPARK_LOCAL_DIRS=\${rankdir}/localdir \
SPARK_LOG_DIR=\${rankdir}/logs \
SPARK_WORKER_DIR=\${rankdir}/work \
SPARK_PID_DIR=\${rankdir}/pids \
${SPARK_HOME}/sbin/stop-slave.sh
EOF


cat << EOF >../start-master.sh
#!/usr/bin/env bash

unset POSIXLY_CORRECT

if [ "\`hostname\`" != "${SPARK_MASTER_NODE}" ]; then
    exit 0
fi

rankdir=\`pwd\`

SPARK_CONF_DIR=${COMMON_DIR}/conf \
SPARK_LOCAL_DIRS=${rankdir}/localdir \
SPARK_WORKER_DIR=${rankdir}/work \
SPARK_LOG_DIR=${rankdir}/logs \
SPARK_PID_DIR=${rankdir}/pids \
${SPARK_HOME}/sbin/start-master.sh

spark-k-wait-master-initialize
EOF


cat << EOF >../stop-master.sh
#!/usr/bin/env bash

unset POSIXLY_CORRECT

if [ "\`hostname\`" != "${SPARK_MASTER_NODE}" ]; then
    exit 0
fi

rankdir=\`pwd\`

SPARK_CONF_DIR=${COMMON_DIR}/conf \
SPARK_LOCAL_DIRS=${rankdir}/localdir \
SPARK_WORKER_DIR=${rankdir}/work \
SPARK_LOG_DIR=${rankdir}/logs \
SPARK_PID_DIR=${rankdir}/pids \
${SPARK_HOME}/sbin/stop-master.sh
EOF

mpiexec /work/system/bin/msh ${COMMON_DIR}/start-slave.sh

mpiexec /work/system/bin/msh ${COMMON_DIR}/start-master.sh
